// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  email       String  @db.VarChar(200) @unique    
  name        String  @db.VarChar(200)
  phoneNumber String  @db.VarChar(11)
  password    String
  createdAt   DateTime @default(now())
  map Map[]
  postlike PostLike[]
  postcomment Post_Comment[]
  chat Chat[]
  profile Profile[]
}

model Map {
  id           String  @id @default(uuid())
  lat          Float
  long         Float
  title        String @db.VarChar(200) 
  explain      String @db.VarChar(300)
  address      String @db.VarChar(200)
  install_date DateTime @default(now())
  pri_pub_div  Int
  in_out_div   Int
  user_id      String //fk
  user User @relation (fields: [user_id], references: [id])

  post Post[] // 여러개 포스트 정보 가져오기
}

model Post {
  id        String  @id @default(uuid())
  title     String  @db.VarChar(200)
  info      String  @db.VarChar(200)
  src_url   String 
  createdAt DateTime @default(now())
  map_id String
  map Map @relation(fields: [map_id], references: [id])
  
  postlike PostLike[]
  postcomment Post_Comment[]
  chat Chat[]
  search Search[]
  profile Profile[]

}

model PostLike{
  user_id String //fk
  user User @relation(fields: [user_id], references: [id])
  post_id String //fk
  post Post @relation(fields: [post_id], references: [id])

  @@id([user_id,post_id])
}

model Post_Comment {
  id         String @id @default(uuid())
  content    String @db.VarChar(300)
  star       Int
  createdAt  DateTime @default(now())
  post_id    String //fk
  post Post @relation(fields: [post_id], references: [id])
  user_id     String //fk
  user User @relation(fields: [user_id], references: [id])

  profile Profile[]
}

model Chat {
  id        String  @id @default(uuid())
  message   String  @db.VarChar(300)
  post_id   String  //fk
  post Post @relation(fields: [post_id], references: [id])
  user_id   String  //fk
  user User  @relation(fields: [user_id], references: [id])
}

model Search {
  id           String @id @default(uuid())
  search_title String @db.VarChar(100)
  post_id      String //fk
  post Post @relation(fields: [post_id], references: [id])
}

model Profile {
  id             String  @id @default(uuid())
  user_id        String //fk
  user User  @relation(fields: [user_id], references: [id])
  post_id        String //fk
  post Post @relation(fields: [post_id], references: [id])
  postcomment_id String? //fk
  postcomment Post_Comment? @relation(fields: [postcomment_id],references: [id])
}